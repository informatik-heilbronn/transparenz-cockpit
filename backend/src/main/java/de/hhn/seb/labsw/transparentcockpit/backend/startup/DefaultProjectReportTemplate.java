package de.hhn.seb.labsw.transparentcockpit.backend.startup;

import de.hhn.seb.labsw.transparentcockpit.backend.models.project.base.group.Group;
import de.hhn.seb.labsw.transparentcockpit.backend.models.project.base.input.DataType;
import de.hhn.seb.labsw.transparentcockpit.backend.models.project.base.input.InputModifier;
import de.hhn.seb.labsw.transparentcockpit.backend.models.project.template.ProjectReportTemplate;
import de.hhn.seb.labsw.transparentcockpit.backend.models.project.template.input.MultiInputTemplate;
import de.hhn.seb.labsw.transparentcockpit.backend.models.project.template.input.SelectMultiInputTemplate;
import de.hhn.seb.labsw.transparentcockpit.backend.models.project.template.input.SelectSingleInputTemplate;
import de.hhn.seb.labsw.transparentcockpit.backend.models.project.template.input.SingleInputTemplate;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.*;

/**
 * Default ProjectReportTemplate of Stadt Heilbronn.
 */
public class DefaultProjectReportTemplate {

    private final ProjectReportTemplate projectReportTemplate;


    public DefaultProjectReportTemplate() {
        projectReportTemplate = new ProjectReportTemplate(UUID.randomUUID());

        groupA();
        groupB();
        groupC();
        groupD();
        groupE();
        groupF();
        groupG();
    }


    public ProjectReportTemplate getProjectReportTemplate() {
        return projectReportTemplate;
    }

    private void groupA() {
        Group groupA = new Group("A.", "Vorhabenauftrag");

        Set<InputModifier> modifiersInputA1 = new HashSet<>();
        modifiersInputA1.add(InputModifier.REQUIRED);
        modifiersInputA1.add(InputModifier.PROJECT_NAME);
        SingleInputTemplate inputA1 = new SingleInputTemplate("1.", "Vorhabentitle", modifiersInputA1,
                DataType.STRING);
        groupA.addField(inputA1);

        Set<InputModifier> modifiersInputA2 = new HashSet<>();
        modifiersInputA2.add(InputModifier.REQUIRED);
        List<Object> allowedValuesInputA2 = new ArrayList<>();
        Collections.addAll(allowedValuesInputA2, "Dezernat_I", "101", "102", "103", "104", "105", "106", "107", "14", "30",
                "37", "GPR", "Dezernat_II", "10", "20", "23", "Dezernat_III", "32", "33", "40", "40.42", "40.43", "40.44", "40.45",
                "40.47", "46", "50", "53", "Dezernat_IV", "60", "62", "63", "65", "66", "67", "68", "70", "Stadtsiedlung Heilbronn GmbH",
                "Heilbronn Marketing GmbH (HMG)", "Beteiligungsgesellschaft Stadt Heilbronn mbH", "Wirtschaftsregion Heilbronn-Franken GmbH (WHF)",
                "SLK Kliniken Heilbronn GmbH", "Regionale Gesundheitsholding Heilbronn Franken GmbH (RGHF)", "Bundesgartenschau Heilbronn 2019 GmbH (BuGa)",
                "experimenta – Science Center der Region Heilbronn-Franken gGmbH", "Stadtwerke Heilbronn GmbH (SWH)", "Heilbronner Versorgungs GmbH (HVG)",
                "Heilbronner-Hohenloher-Haller-Nahverkehr GmbH (HNV)", "Wirtschaftsförderung Raum Heilbronn GmbH (WFG)", "Katharinenstift Heilbronn gGmbH",
                "Volkshochschule Heilbronn gGmbH", "EE Bürgerenergie Heilbronn GmbH & Co. KG", "Energieagentur Heilbronn GmbH");
        SelectSingleInputTemplate inputA2 = new SelectSingleInputTemplate("2.", "Federführendes Amt",
                modifiersInputA2, DataType.STRING, allowedValuesInputA2);
        groupA.addField(inputA2);

        Set<InputModifier> modifiersInputA3 = new HashSet<>();
        modifiersInputA3.add(InputModifier.REQUIRED);
        SingleInputTemplate inputA3 = new SingleInputTemplate("3.", "Federführende Abteilung",
                modifiersInputA3, DataType.STRING);
        groupA.addField(inputA3);

        Set<InputModifier> modifiersInputA4 = new HashSet<>();
        modifiersInputA4.add(InputModifier.REQUIRED);
        SingleInputTemplate inputA4 = new SingleInputTemplate("4.", "Ansprechpartner*in", modifiersInputA4,
                DataType.STRING);
        groupA.addField(inputA4);

        Set<InputModifier> modifiersInputA5 = new HashSet<>();
        modifiersInputA5.add(InputModifier.REQUIRED);
        List<Object> allowedValuesInputA5 = new ArrayList<>();
        Collections.addAll(allowedValuesInputA5, "Maßnahme (langfristig)", "Maßnahme (mittelfristig)", "Maßnahme (kurzfristig)",
                "Reallabor", "noch undefiniert");
        SelectSingleInputTemplate inputA5 = new SelectSingleInputTemplate("5.", "Vorhabentyp",
                modifiersInputA5, DataType.STRING, allowedValuesInputA5);
        groupA.addField(inputA5);

        Set<InputModifier> modifiersInputA6 = new HashSet<>();
        modifiersInputA6.add(InputModifier.REQUIRED);
        modifiersInputA6.add(InputModifier.PROJECT_ID);
        modifiersInputA6.add(InputModifier.AUTOGENERATED);
        SingleInputTemplate inputA6 = new SingleInputTemplate("6.", "Vorhabennummer", modifiersInputA6,
                DataType.STRING);
        groupA.addField(inputA6);

        Set<InputModifier> modifiersInputA7 = new HashSet<>();
        modifiersInputA7.add(InputModifier.REQUIRED);
        List<Object> allowedValuesInputA7 = new ArrayList<>();
        Collections.addAll(allowedValuesInputA7, "Eigenmotivation", "gesetzliches Erfordernis", "Auftrag", "Fördermittel/-Wettbewerb",
                "anderer Grund");
        SelectSingleInputTemplate inputA7 = new SelectSingleInputTemplate("7.", "Vorhabennummer",
                modifiersInputA7, DataType.STRING, allowedValuesInputA7);
        groupA.addField(inputA7);

        Set<InputModifier> modifiersInputA71 = new HashSet<>();
        modifiersInputA71.add(InputModifier.REQUIRED);
        SingleInputTemplate inputA71 = new SingleInputTemplate("7.1", "Gesetz, Beschluss, etc. hier  angeben:",
                modifiersInputA71, DataType.STRING);
        groupA.addField(inputA71);

        projectReportTemplate.addGroup(groupA);
    }

    private void groupB() {
        Group groupB = new Group("B.", "Vorhabeninhalt und Ziele");

        SingleInputTemplate inputB1 = new SingleInputTemplate("1.", "Beschreibung", new HashSet<>(),
                DataType.STRING);
        groupB.addField(inputB1);

        SingleInputTemplate inputB2 = new SingleInputTemplate("2.", "Vorhabenziel", new HashSet<>(),
                DataType.STRING);
        groupB.addField(inputB2);

        List<Object> allowedValuesInputB3 = new ArrayList<>();
        Collections.addAll(allowedValuesInputB3, "Dezernat_I", "101", "102", "103", "104", "105", "106", "107", "14", "30",
                "37", "GPR", "Dezernat_II", "10", "20", "23", "Dezernat_III", "32", "33", "40", "40.42", "40.43", "40.44", "40.45",
                "40.47", "46", "50", "53", "Dezernat_IV", "60", "62", "63", "65", "66", "67", "68", "70", "Stadtsiedlung Heilbronn GmbH",
                "Heilbronn Marketing GmbH (HMG)", "Beteiligungsgesellschaft Stadt Heilbronn mbH", "Wirtschaftsregion Heilbronn-Franken GmbH (WHF)",
                "SLK Kliniken Heilbronn GmbH", "Regionale Gesundheitsholding Heilbronn Franken GmbH (RGHF)", "Bundesgartenschau Heilbronn 2019 GmbH (BuGa)",
                "experimenta – Science Center der Region Heilbronn-Franken gGmbH", "Stadtwerke Heilbronn GmbH (SWH)", "Heilbronner Versorgungs GmbH (HVG)",
                "Heilbronner-Hohenloher-Haller-Nahverkehr GmbH (HNV)", "Wirtschaftsförderung Raum Heilbronn GmbH (WFG)", "Katharinenstift Heilbronn gGmbH",
                "Volkshochschule Heilbronn gGmbH", "EE Bürgerenergie Heilbronn GmbH & Co. KG", "Energieagentur Heilbronn GmbH");
        SelectMultiInputTemplate inputB3 = new SelectMultiInputTemplate("3.", "interne Projektbeteiligte",
                new HashSet<>(), DataType.STRING, allowedValuesInputB3);
        groupB.addField(inputB3);

        MultiInputTemplate inputB4 = new MultiInputTemplate("4.", "externe Projektbeteiligte", new HashSet<>(),
                DataType.STRING);
        groupB.addField(inputB4);

        projectReportTemplate.addGroup(groupB);
    }

    private void groupC() {

        Group groupC = new Group("C.", "Vorhabenkontext");

        Set<InputModifier> modifiersInputC0 = new HashSet<>();
        modifiersInputC0.add(InputModifier.REQUIRED);
        modifiersInputC0.add(InputModifier.PROJECT_GROUP);
        List<Object> allowedValuesInputC0 = new ArrayList<>();
        Collections.addAll(allowedValuesInputC0, "Verwaltung & Infrastruktur", "Bildungs- und Wissensstadt",
                "Teilhabe an der Stadtgesellschaft", "Zukunftsfähige Mobilität");
        SelectSingleInputTemplate inputC0 = new SelectSingleInputTemplate("0.", "Gruppe", modifiersInputC0,
                DataType.STRING, allowedValuesInputC0);
        groupC.addField(inputC0);

        Set<InputModifier> modifiersInputC1A = new HashSet<>();
        modifiersInputC1A.add(InputModifier.REQUIRED);
        List<Object> allowedValuesInputC1A = new ArrayList<>();
        Collections.addAll(allowedValuesInputC1A, "vorrangig unterstürtzt", "grundsätzlich unterstützt", "nicht unterstützt");
        SelectSingleInputTemplate inputC1A = new SelectSingleInputTemplate("1.a",
                "Strategiefelder: Verwaltung & Infrastruktur", modifiersInputC1A, DataType.STRING, allowedValuesInputC1A);
        groupC.addField(inputC1A);

        Set<InputModifier> modifiersInputC1B = new HashSet<>();
        modifiersInputC1B.add(InputModifier.REQUIRED);
        List<Object> allowedValuesInputC1B = new ArrayList<>();
        Collections.addAll(allowedValuesInputC1B, "vorrangig unterstürtzt", "grundsätzlich unterstützt", "nicht unterstützt");
        SelectSingleInputTemplate inputC1B = new SelectSingleInputTemplate("1.b",
                "Strategiefelder: Bildungs- und Wissensstadt", modifiersInputC1B, DataType.STRING, allowedValuesInputC1B);
        groupC.addField(inputC1B);

        Set<InputModifier> modifiersInputC1C = new HashSet<>();
        modifiersInputC1C.add(InputModifier.REQUIRED);
        List<Object> allowedValuesInputC1C = new ArrayList<>();
        Collections.addAll(allowedValuesInputC1C, "vorrangig unterstürtzt", "grundsätzlich unterstützt", "nicht unterstützt");
        SelectSingleInputTemplate inputC1C = new SelectSingleInputTemplate("1.c",
                "Strategiefelder: Teilhabe an der Stadtgesellschaft", modifiersInputC1C, DataType.STRING,
                allowedValuesInputC1C);
        groupC.addField(inputC1C);

        Set<InputModifier> modifiersInputC1D = new HashSet<>();
        modifiersInputC1D.add(InputModifier.REQUIRED);
        List<Object> allowedValuesInputC1D = new ArrayList<>();
        Collections.addAll(allowedValuesInputC1D, "vorrangig unterstürtzt", "grundsätzlich unterstützt", "nicht unterstützt");
        SelectSingleInputTemplate inputC1D = new SelectSingleInputTemplate("1.d",
                "Strategiefelder: Zukunftsfähige Mobilität", modifiersInputC1D, DataType.STRING, allowedValuesInputC1D);
        groupC.addField(inputC1D);

        Set<InputModifier> modifiersInputC2 = new HashSet<>();
        modifiersInputC2.add(InputModifier.REQUIRED);
        List<Object> allowedValuesInputC2 = new ArrayList<>();
        Collections.addAll(allowedValuesInputC2, "Ja", "Nein", "Noch in Klärung" );
        SelectSingleInputTemplate inputC2 = new SelectSingleInputTemplate("2",
                "Vorhaben ist beteiligungspflichtig nach Landespersonal-Vertretungsgesetz", modifiersInputC2,
                DataType.STRING, allowedValuesInputC2);
        groupC.addField(inputC2);

        projectReportTemplate.addGroup(groupC);
    }

    private void groupD() {
        Group groupD = new Group("D.", "Vorhaben-Status");

        List<Object> allowedValuesInputD1 = new ArrayList<>();
        Collections.addAll(allowedValuesInputD1, "Im Plan", "Teilweise kritisch", "Kritisch");
        SelectSingleInputTemplate inputD1 = new SelectSingleInputTemplate("1.", "Gesamtstatus",
                new HashSet<>(), DataType.STRING, allowedValuesInputD1);
        groupD.addField(inputD1);

        List<Object> allowedValuesInputD2 = new ArrayList<>();
        Collections.addAll(allowedValuesInputD2, 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100);
        SelectSingleInputTemplate inputD2 = new SelectSingleInputTemplate("2.", "Gesamtfortschritt",
                new HashSet<>(), DataType.INTEGER, allowedValuesInputD2);
        groupD.addField(inputD2);

        List<Object> allowedValuesInputD3 = new ArrayList<>();
        Collections.addAll(allowedValuesInputD3, "Ideenfindung", "Vorbereitung", "Planung", "Umsetzung", "Abgeschlossen", "Zurückgestellt");
        SelectSingleInputTemplate inputD3 = new SelectSingleInputTemplate("3.", "Bearbeitungsstand",
                new HashSet<>(), DataType.STRING, allowedValuesInputD3);
        groupD.addField(inputD3);

        projectReportTemplate.addGroup(groupD);
    }

    private void groupE() {
        Group groupE = new Group("E.", "Umsetzungszeitraum");

        SingleInputTemplate inputE1 = new SingleInputTemplate("1.", "geplanter Zeitpunkt für Vorhabenbeginn",
                new HashSet<>(), DataType.DATE);
        groupE.addField(inputE1);

        SingleInputTemplate inputE2 = new SingleInputTemplate("2.",
                "ursprünglich geplanter Zeitpunkt für Vorhabenende", new HashSet<>(), DataType.DATE);
        groupE.addField(inputE2);

        SingleInputTemplate inputE3 = new SingleInputTemplate("3.",
                "ursprünglich geplanter Zeitpunkt für Vorhabenende", new HashSet<>(), DataType.DATE);
        groupE.addField(inputE3);

        projectReportTemplate.addGroup(groupE);
    }

    private void groupF() {

        Group groupF = new Group("F.", "Ressourcen");

        SingleInputTemplate inputF1 = new SingleInputTemplate("1.", "Kosten, soweit bezifferbar in EUR",
                new HashSet<>(), DataType.INTEGER);
        groupF.addField(inputF1);

        List<Object> allowedValuesInputF2 = new ArrayList<>();
        allowedValuesInputF2.add("Ja");
        allowedValuesInputF2.add("Nein");
        SelectSingleInputTemplate inputF2 = new SelectSingleInputTemplate("2.",
                "Mittel im aktuellen HH enthalten?", new HashSet<>(), DataType.STRING, allowedValuesInputF2);
        groupF.addField(inputF2);

        List<Object> allowedValuesInputF3 = new ArrayList<>();
        allowedValuesInputF3.add("Ja");
        allowedValuesInputF3.add("Nein");
        SelectSingleInputTemplate inputF3 = new SelectSingleInputTemplate("3.",
                "Mittel für neuen HH beantragt?", new HashSet<>(), DataType.STRING, allowedValuesInputF3);
        groupF.addField(inputF3);

        projectReportTemplate.addGroup(groupF);
    }

    private void groupG() {

        Group groupG = new Group("G.", "Sonstige Angaben");

        List<Object> allowedValuesInputG1 = new ArrayList<>();
        allowedValuesInputG1.add("Ja");
        allowedValuesInputG1.add("Nein");
        SelectSingleInputTemplate inputG1 = new SelectSingleInputTemplate("1.", "Benötigt die Aktivität "
                + "später eine Anbindung an das Kassensystem, bzw. ist ein Bezahlsystem beabsichtigt?",
                new HashSet<>(), DataType.STRING, allowedValuesInputG1);
        groupG.addField(inputG1);

        List<Object> allowedValuesInputG2 = new ArrayList<>();
        allowedValuesInputG2.add("Ja");
        allowedValuesInputG2.add("Nein");
        SelectSingleInputTemplate inputG2 = new SelectSingleInputTemplate("2.",
                "Gibt es Redundanzen zu einem anderen Projekt?", new HashSet<>(), DataType.STRING, allowedValuesInputG2);
        groupG.addField(inputG2);

        SingleInputTemplate inputG3 = new SingleInputTemplate("3.", "Nennung des Projekts", new HashSet<>(),
                DataType.STRING);
        groupG.addField(inputG3);

        List<Object> allowedValuesInputG4 = new ArrayList<>();
        allowedValuesInputG4.add("Ja");
        allowedValuesInputG4.add("Nein");
        SelectSingleInputTemplate inputG4 = new SelectSingleInputTemplate("4.",
                "Gibt es Synergie-effekte in Verbindung mit einem anderen Projekt?", new HashSet<>(), DataType.STRING,
                allowedValuesInputG4);
        groupG.addField(inputG4);

        SingleInputTemplate inputG5 = new SingleInputTemplate("5.", "Nennung des Projekts", new HashSet<>(),
                DataType.STRING);
        groupG.addField(inputG5);

        List<Object> allowedValuesInputG6A = new ArrayList<>();
        Collections.addAll(allowedValuesInputG6A, "vorrangig unterstürtzt", "grundsätzlich unterstützt", "nicht unterstützt");
        SelectSingleInputTemplate inputG6A = new SelectSingleInputTemplate("6.a",
                "Wirkung des Vorhabens: Reduzierung des Verwaltungsaufwands (z.B. Personalverwaltung)", new HashSet<>(),
                DataType.STRING, allowedValuesInputG6A);
        groupG.addField(inputG6A);

        List<Object> allowedValuesInputG6B = new ArrayList<>();
        Collections.addAll(allowedValuesInputG6B, "vorrangig unterstürtzt", "grundsätzlich unterstützt", "nicht unterstützt");
        SelectSingleInputTemplate inputG6B = new SelectSingleInputTemplate("6.b",
                "Wirkung des Vorhabens: Reduzierung der Gemeinkosten durch gemeinsame Verwendung von Infrastruktur "
                        + "(z.B. IT)", new HashSet<>(), DataType.STRING, allowedValuesInputG6B);
        groupG.addField(inputG6B);

        List<Object> allowedValuesInputG6C = new ArrayList<>();
        Collections.addAll(allowedValuesInputG6C, "vorrangig unterstürtzt", "grundsätzlich unterstützt", "nicht unterstützt");
        SelectSingleInputTemplate inputG6C = new SelectSingleInputTemplate("6.c",
                "Wirkung des Vorhabens: Raschere Umsetzung durch Zusammenführung des Know-hows", new HashSet<>(),
                DataType.STRING, allowedValuesInputG6C);
        groupG.addField(inputG6C);

        List<Object> allowedValuesInputG6D = new ArrayList<>();
        Collections.addAll(allowedValuesInputG6D, "vorrangig unterstürtzt", "grundsätzlich unterstützt", "nicht unterstützt");
        SelectSingleInputTemplate inputG6D = new SelectSingleInputTemplate("6.d",
                "Wirkung des Vorhabens: Möglichkeit zur Entwicklung neuer Serviceangebote oder Produkte", new HashSet<>(),
                DataType.STRING, allowedValuesInputG6D);
        groupG.addField(inputG6D);

        List<Object> allowedValuesInputG6E = new ArrayList<>();
        Collections.addAll(allowedValuesInputG6E, "vorrangig unterstürtzt", "grundsätzlich unterstützt", "nicht unterstützt");
        SelectSingleInputTemplate inputG6E = new SelectSingleInputTemplate("6.e",
                "Wirkung des Vorhabens: Möglichkeit zur Erhöhung des Kundennutzens", new HashSet<>(), DataType.STRING,
                allowedValuesInputG6E);
        groupG.addField(inputG6E);

        SingleInputTemplate inputG7 = new SingleInputTemplate("7.", "freie Anmerkungen", new HashSet<>(),
                DataType.STRING);
        groupG.addField(inputG7);

        projectReportTemplate.addGroup(groupG);
    }

}
